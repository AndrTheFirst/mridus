/*
SCSS variables are information about icon's compiled state, stored under its original file name

.icon-home {
  width: $icon-home-width;
}

The large array-like variables contain all information about a single icon
$icon-home: x y offset_x offset_y width height total_width total_height image_path;

At the bottom of this section, we provide information about the spritesheet itself
$spritesheet: width height image $spritesheet-sprites;
*/
$icon-age-limit-name: 'icon-age-limit';
$icon-age-limit-x: 0px;
$icon-age-limit-y: 0px;
$icon-age-limit-offset-x: 0px;
$icon-age-limit-offset-y: 0px;
$icon-age-limit-width: 44px;
$icon-age-limit-height: 44px;
$icon-age-limit-total-width: 99px;
$icon-age-limit-total-height: 91px;
$icon-age-limit-image: '../images/sprite.png';
$icon-age-limit: (0px, 0px, 0px, 0px, 44px, 44px, 99px, 91px, '../images/sprite.png', 'icon-age-limit', );
$icon-brick-count-comment-name: 'icon-brick-count-comment';
$icon-brick-count-comment-x: 44px;
$icon-brick-count-comment-y: 44px;
$icon-brick-count-comment-offset-x: -44px;
$icon-brick-count-comment-offset-y: -44px;
$icon-brick-count-comment-width: 23px;
$icon-brick-count-comment-height: 23px;
$icon-brick-count-comment-total-width: 99px;
$icon-brick-count-comment-total-height: 91px;
$icon-brick-count-comment-image: '../images/sprite.png';
$icon-brick-count-comment: (44px, 44px, -44px, -44px, 23px, 23px, 99px, 91px, '../images/sprite.png', 'icon-brick-count-comment', );
$icon-brick-count-like-name: 'icon-brick-count-like';
$icon-brick-count-like-x: 80px;
$icon-brick-count-like-y: 0px;
$icon-brick-count-like-offset-x: -80px;
$icon-brick-count-like-offset-y: 0px;
$icon-brick-count-like-width: 19px;
$icon-brick-count-like-height: 30px;
$icon-brick-count-like-total-width: 99px;
$icon-brick-count-like-total-height: 91px;
$icon-brick-count-like-image: '../images/sprite.png';
$icon-brick-count-like: (80px, 0px, -80px, 0px, 19px, 30px, 99px, 91px, '../images/sprite.png', 'icon-brick-count-like', );
$icon-brick-count-show-name: 'icon-brick-count-show';
$icon-brick-count-show-x: 23px;
$icon-brick-count-show-y: 75px;
$icon-brick-count-show-offset-x: -23px;
$icon-brick-count-show-offset-y: -75px;
$icon-brick-count-show-width: 22px;
$icon-brick-count-show-height: 16px;
$icon-brick-count-show-total-width: 99px;
$icon-brick-count-show-total-height: 91px;
$icon-brick-count-show-image: '../images/sprite.png';
$icon-brick-count-show: (23px, 75px, -23px, -75px, 22px, 16px, 99px, 91px, '../images/sprite.png', 'icon-brick-count-show', );
$icon-count-comment-name: 'icon-count-comment';
$icon-count-comment-x: 20px;
$icon-count-comment-y: 44px;
$icon-count-comment-offset-x: -20px;
$icon-count-comment-offset-y: -44px;
$icon-count-comment-width: 24px;
$icon-count-comment-height: 24px;
$icon-count-comment-total-width: 99px;
$icon-count-comment-total-height: 91px;
$icon-count-comment-image: '../images/sprite.png';
$icon-count-comment: (20px, 44px, -20px, -44px, 24px, 24px, 99px, 91px, '../images/sprite.png', 'icon-count-comment', );
$icon-count-like-name: 'icon-count-like';
$icon-count-like-x: 0px;
$icon-count-like-y: 44px;
$icon-count-like-offset-x: 0px;
$icon-count-like-offset-y: -44px;
$icon-count-like-width: 20px;
$icon-count-like-height: 31px;
$icon-count-like-total-width: 99px;
$icon-count-like-total-height: 91px;
$icon-count-like-image: '../images/sprite.png';
$icon-count-like: (0px, 44px, 0px, -44px, 20px, 31px, 99px, 91px, '../images/sprite.png', 'icon-count-like', );
$icon-count-show-name: 'icon-count-show';
$icon-count-show-x: 0px;
$icon-count-show-y: 75px;
$icon-count-show-offset-x: 0px;
$icon-count-show-offset-y: -75px;
$icon-count-show-width: 23px;
$icon-count-show-height: 16px;
$icon-count-show-total-width: 99px;
$icon-count-show-total-height: 91px;
$icon-count-show-image: '../images/sprite.png';
$icon-count-show: (0px, 75px, 0px, -75px, 23px, 16px, 99px, 91px, '../images/sprite.png', 'icon-count-show', );
$icon-lupa-name: 'icon-lupa';
$icon-lupa-x: 44px;
$icon-lupa-y: 0px;
$icon-lupa-offset-x: -44px;
$icon-lupa-offset-y: 0px;
$icon-lupa-width: 36px;
$icon-lupa-height: 35px;
$icon-lupa-total-width: 99px;
$icon-lupa-total-height: 91px;
$icon-lupa-image: '../images/sprite.png';
$icon-lupa: (44px, 0px, -44px, 0px, 36px, 35px, 99px, 91px, '../images/sprite.png', 'icon-lupa', );
$spritesheet-width: 99px;
$spritesheet-height: 91px;
$spritesheet-image: '../images/sprite.png';
$spritesheet-sprites: ($icon-age-limit, $icon-brick-count-comment, $icon-brick-count-like, $icon-brick-count-show, $icon-count-comment, $icon-count-like, $icon-count-show, $icon-lupa, );
$spritesheet: (99px, 91px, '../images/sprite.png', $spritesheet-sprites, );

/*
The provided mixins are intended to be used with the array-like variables

.icon-home {
  @include sprite-width($icon-home);
}

.icon-email {
  @include sprite($icon-email);
}

Example usage in HTML:

`display: block` sprite:
<div class="icon-home"></div>

To change `display` (e.g. `display: inline-block;`), we suggest using a common CSS class:

// CSS
.icon {
  display: inline-block;
}

// HTML
<i class="icon icon-home"></i>
*/
@mixin sprite-width($sprite) {
  width: nth($sprite, 5);
}

@mixin sprite-height($sprite) {
  height: nth($sprite, 6);
}

@mixin sprite-position($sprite) {
  $sprite-offset-x: nth($sprite, 3);
  $sprite-offset-y: nth($sprite, 4);
  background-position: $sprite-offset-x  $sprite-offset-y;
}

@mixin sprite-image($sprite) {
  $sprite-image: nth($sprite, 9);
  background-image: url(#{$sprite-image});
}

@mixin sprite($sprite) {
  @include sprite-image($sprite);
  @include sprite-position($sprite);
  background-repeat: no-repeat;
}

@mixin sprite-box($sprite) {
  @include sprite-image($sprite);
  @include sprite-position($sprite);
  @include sprite-width($sprite);
  @include sprite-height($sprite);
  display: inline-block;
  background-repeat: no-repeat;
}

@mixin sprite-pseudo-box($sprite) {
  @include sprite-image($sprite);
  @include sprite-position($sprite);
  @include sprite-width($sprite);
  @include sprite-height($sprite);
  content: '';
  display: inline-block;
  background-repeat: no-repeat;
}

/*
The `sprites` mixin generates identical output to the CSS template
  but can be overridden inside of SCSS

@include sprites($spritesheet-sprites);
*/
@mixin sprites($sprites) {
  @each $sprite in $sprites {
    $sprite-name: nth($sprite, 10);
    .#{$sprite-name} {
      @include sprite($sprite);
    }
  }
}
